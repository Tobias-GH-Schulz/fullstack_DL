{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Introduction"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"contributing/","text":"To contribute to our work please follow this guide: Setup your environment pip install pip-tools pip-sync requirements/production.txt Integrate new dependencies To integrate new development dependencies add them to the dev.in file and use the following command to compile them into dev.txt pip-compile -v --output-file requirements/dev.txt requirements/dev.in To integrate new production dependencies add them to the production.in file and use the following command to compile them into production.txt pip-compile -v --output-file requirements/production.txt requirements/production.in","title":"Contributing"},{"location":"contributing/#setup-your-environment","text":"pip install pip-tools pip-sync requirements/production.txt","title":"Setup your environment"},{"location":"contributing/#integrate-new-dependencies","text":"To integrate new development dependencies add them to the dev.in file and use the following command to compile them into dev.txt pip-compile -v --output-file requirements/dev.txt requirements/dev.in To integrate new production dependencies add them to the production.in file and use the following command to compile them into production.txt pip-compile -v --output-file requirements/production.txt requirements/production.in","title":"Integrate new dependencies"},{"location":"examples/","text":"Here are some examples to run this project Example 1 In order to run the training script use: python train.py --train --epochs 2 --optimizer adam --data_path \"your_path\" Example 2 This is the second example","title":"Examples"},{"location":"examples/#example-1","text":"In order to run the training script use: python train.py --train --epochs 2 --optimizer adam --data_path \"your_path\"","title":"Example 1"},{"location":"examples/#example-2","text":"This is the second example","title":"Example 2"},{"location":"models/","text":"Classification model asdsdasd","title":"Models"},{"location":"models/#classification-model","text":"asdsdasd","title":"Classification model"},{"location":"running/","text":"How to run the model as a service This app is designed to be run inside Flask. The app is in service.py FLASK_ENV=development FLASK_APP=service.py flask run --port 5000","title":"Run"},{"location":"running/#how-to-run-the-model-as-a-service","text":"This app is designed to be run inside Flask. The app is in service.py FLASK_ENV=development FLASK_APP=service.py flask run --port 5000","title":"How to run the model as a service"}]}